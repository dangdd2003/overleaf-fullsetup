name: Docker Image Builder

on: workflow_dispatch

env:
  # Defined registries
  REGISTRY1: ghcr.io
  REGISTRY2: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: sharelatex
  # Tex live year version
  TEXLIVE_YEAR: 2024

jobs:
  build-image-and-push-full-version:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          repository: "overleaf/toolkit"

      - name: Start sharelatex images
        run: |
          ./bin/init
          ./bin/up -d

      - name: Setup sharelatex images as production ready overleaf server
        run: |
          docker exec sharelatex apt update
          docker exec sharelatex apt upgrade -y
          docker exec sharelatex apt install inkscape python3-pygments -y
          docker exec sharelatex bash -c 'echo "shell_escape = t" >> /usr/local/texlive/${{ env.TEXLIVE_YEAR }}/texmf.cnf'
          docker exec sharelatex mkdir -p /usr/local/lib/latexmk
          docker exec sharelatex touch /usr/local/lib/latexmk/latexmkrc
          docker exec sharelatex bash -c 'echo "# Fix generating of glossaries
          # Source: https://github.com/overleaf/docker-image/issues/6#issuecomment-282931678
          add_cus_dep('glo', 'gls', 0, 'makeglo2gls');
          sub makeglo2gls {
              system("makeindex -s '$_[0]'.ist -t '$_[0]'.glg -o '$_[0]'.gls '$_[0]'.glo");
          }

          add_cus_dep('acn', 'acr', 0, 'makeacn2acr');
          sub makeacn2acr {
              system("makeindex -s \"$_[0].ist\" -t \"$_[0].alg\" -o \"$_[0].acr\" \"$_[0].acn\"");
          }" >> "/usr/local/lib/latexmk/latexmkrc"'
          docker exec sharelatex tlmgr install scheme-full

      - name: Recheck created files
        run: |
          docker exec sharelatex cat /usr/local/texlive/${{ env.TEXLIVE_YEAR }}/texmf.cnf
          docker exec sharelatex cat /usr/local/lib/latexmk/latexmkrc

      - name: Get current version
        run: |
          cat config/version
          export VERSION=$(cat config/version)
          echo "Current overleaf version $VERSION"

      - name: Commit new version registry ${{ env.REGISTRY1 }}
        run: |
          docker commit sharelatex ${{ env.REGISTRY1 }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
          docker commit sharelatex ${{ env.REGISTRY1 }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:$VERSION

      - name: Commit new version registry ${{ env.REGISTRY2 }}
        run: |
          docker commit sharelatex dangdoan2003/${{ env.IMAGE_NAME }}:latest
          docker commit sharelatex dangdoan2003/${{ env.IMAGE_NAME }}:$VERSION

      - name: Log into registry ${{ env.REGISTRY1 }}
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY1 }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image to registry ${{ env.REGISTRY1 }}
        run: |
          docker push ${{ env.REGISTRY1 }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY1 }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:$VERSION

      - name: Log into registry ${{ env.REGISTRY2 }}
        uses: docker/login-action@v3.3.0
        with:
          username: dangdoan2003
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push image to registry ${{ env.REGISTRY2 }}
        run: |
          docker push dangdoan2003/${{ env.IMAGE_NAME }}:latest
          docker push dangdoan2003/${{ env.IMAGE_NAME }}:$VERSION
