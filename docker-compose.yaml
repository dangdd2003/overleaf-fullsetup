---
services:
  overleaf:
    restart: always
    image: dangdoan2003/sharelatex:latest
    container_name: overleaf
    env_file:
      - "./variable.env"
    volumes:
      - "./data/overleaf:/var/lib/overleaf"
      - "./data/overleaf/log:/var/log/overleaf"
      - "/etc/localtime:/etc/localtime:ro"
    stop_grace_period: 30s
    ports:
      - "127.0.0.1:80:80"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started

  mongo:
    restart: always
    image: mongo:latest
    container_name: mongo
    command: "--replSet overleaf"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "./data/mongo:/data/db"
      - "./mongodb-init-replica-set.js:/docker-entrypoint-initdb.d/mongodb-init-replica-set.js:ro"
    extra_hosts:
      - "mongo:127.0.0.1"
    environment:
      MONGO_INITDB_DATABASE: overleaf
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    restart: always
    image: redis:latest
    container_name: redis
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "./data/redis:/data"

  # nginx:
  #   restart: always
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   volumes:
  #     - "/etc/localtime:/etc/localtime:ro"
  #     - "/var/run/docker.sock:/tmp/docker.sock:ro"
  #     - "/etc/letsencrypt:/etc/letsencrypt:ro"
  #     - "./nginx.conf:/etc/nginx/nginx.conf:ro"
