os: linux
arch: amd64
dist: jammy
services:
  - docker

env:
  global:
    - TZ: "Asia/Ho_Chi_Minh"
    - TEXLIVE_MIRROR: "https://mirrors.mit.edu/CTAN/systems/texlive/tlnet"
    - BASE_IMAGE: sharelatex-base
    - FULL_IMAGE: sharelatex
    - GHCR: ghcr.io
  # update docker
before_install:
  - for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
  - sudo apt-get update
  - sudo apt-get install ca-certificates curl
  - sudo install -m 0755 -d /etc/apt/keyrings
  - sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  - sudo chmod a+r /etc/apt/keyrings/docker.asc
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  - sudo apt-get update

  # install newest docker version
install:
  - sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  - sudo systemctl start docker
  - docker version

jobs:
  include:
    - stage: Build full image and push
      script:
        - git clone https://github.com/overleaf/overleaf
        - git clone https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/$GITHUB_USERNAME/overleaf-fullsetup.git
        - cp overleaf-fullsetup/Dockerfile overleaf/server-ce/Dockerfile
        - rm -rf overleaf-fullsetup
        - cd overleaf
        - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg TEXLIVE_MIRROR=$TEXLIVE_MIRROR --file ./server-ce/Dockerfile-base --pull --cache-from $DOCKER_USERNAME/$BASE_IMAGE:latest --tag $DOCKER_USERNAME/$BASE_IMAGE:latest --tag $DOCKER_USERNAME/$BASE_IMAGE:$(date +"%Y-%m-%d") --tag $GHCR/$GITHUB_USERNAME/$BASE_IMAGE:latest --tag $GHCR/$GITHUB_USERNAME/$BASE_IMAGE:$(date +"%Y-%m-%d") .
        - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg MONOREPO_REVISION=$(git rev-parse HEAD) --build-arg OVERLEAF_BASE_TAG=$DOCKER_USERNAME/$BASE_IMAGE:latest --progress=plain --file ./server-ce/Dockerfile --pull --cache-from $DOCKER_USERNAME/$FULL_IMAGE:latest --tag $DOCKER_USERNAME/$FULL_IMAGE:latest --tag $DOCKER_USERNAME/$FULL_IMAGE:$(date +"%Y-%m-%d") --tag $GHCR/$GITHUB_USERNAME/$FULL_IMAGE:latest --tag $GHCR/$GITHUB_USERNAME/$FULL_IMAGE:$(date +"%Y-%m-%d") .
        - echo "$DOCKER_TOKEN" | docker login -u $DOCKER_USERNAME --password-stdin
        - echo "$GITHUB_TOKEN" | docker login $GHCR -u $GITHUB_USERNAME --password-stdin
        - docker push $DOCKER_USERNAME/$BASE_IMAGE:latest
        - docker push $DOCKER_USERNAME/$BASE_IMAGE:$(date +"%Y-%m-%d")
        - docker push $DOCKER_USERNAME/$FULL_IMAGE:latest
        - docker push $DOCKER_USERNAME/$FULL_IMAGE:$(date +"%Y-%m-%d")
        - docker push $GHCR/$GITHUB_USERNAME/$BASE_IMAGE:latest
        - docker push $GHCR/$GITHUB_USERNAME/$BASE_IMAGE:$(date +"%Y-%m-%d")
        - docker push $GHCR/$GITHUB_USERNAME/$FULL_IMAGE:latest
        - docker push $GHCR/$GITHUB_USERNAME/$FULL_IMAGE:$(date +"%Y-%m-%d")
        - docker logout
        - docker logout $GHCR
